人机界面
==============
GUI运行机制
~~~~~~~~~~~~~~~

.. image::  /.//image//gui-mechanism.svg
   :align: center
   :width: 800px
   :alt: gui-mechanism

| 

如上图所示，虚拟机通过API函数创建了窗口列表，每一个窗口由一个Widget组成的列表组成。

虚拟机捕捉Widget点击事件、UI重绘事件、定时器事件以及通信消息等等加入到事件队列。

虚拟机通过用户定义的回调函数或底层驱动来进行处理事件队列。

虚拟机内置了字体以及常用的图标。

简单Widget
~~~~~~~~~~~~~~~
首先建立一个空白工程

工程管理区，右键点击设计资源，弹出菜单后再点击新建

.. image::  /.//image//gui-eg1.png
   :align: center
   :width: 800px
   :alt: gui-eg1

|  

弹出的窗口为人机界面设计器，如上图所示，界面分为Widget区、Widget列表、屏幕区、Widget属性区以及对齐工具栏。
可从Widget列表里拖拽控件到设计区域。Widget属性窗口，可对大小、位置、颜色、字体、文字、边框形式等进行设置。

如默认窗口设置为800*480，这个可与实际屏幕硬件进行匹配。

.. image::  /.//image//gui-eg2.png
   :align: center
   :width: 800px
   :alt: gui-eg2

| 

如图所示，拖入控件，可用鼠标拖动位置，并改变大小，设置好位置以及颜色等选项。可利用红框中工具栏菜单进行对齐。最后一个菜单按钮可以显示图标字体，可用图标Unicode码来设置为图标按钮的图案。

保存为"gui.sfd", 右键点击设计资源，点击添加，将"gui.sfd"加入。

新建源文件gui.c, 加入如下代码，也可以点击右键，选择"添加自动生成GUI代码标识"加入代码。保存后在项目管理区加入人机界面设计。

.. code-block:: 

    #include "device.h"
    #include "gui.h"

    /*widgetinfo start*/
    /*widgetinfo end*/

切换到gui.sfd设计界面, 点击菜单自动生成按钮。自动生成的代码将填充在/*widgetinfo start*/和/*widgetinfo end*/之间。

.. image::  /.//image//menubar.png
   :align: center
   :width: 600px
   :alt: menubar
   
|   

重新打开gui.c或者已打开情况下右键菜单刷新，可看到人机界面自动生成代码。

.. code-block:: 

    /*widgetinfo start*/
    #define AUTO_GEN
    #ifdef AUTO_GEN
    static void button0_click();
    static void button1_click();
    static void label0_click();
    static void number0_click();
    static void spinbox0_click();
    static void sw0_click();
    static void timer_cb();
    static wnd mywnd= {
        .mywnd.id = 1000,
        .mywnd.type = OBJ_WINDOW,
        .mywnd.start_x = 0,
        .mywnd.start_y = 0,
        .mywnd.width = 800,
        .mywnd.height = 480,
        .mywnd.bc = C_BLACK,
        .mywnd.fc = C_WHITE,
        .mywnd.oc = C_BLACK,
        .mywnd.owidth = 0,
        .mywnd.font = asc35,
        .mywnd.text = "",
        .mywnd.visible = 0,
    };
    static obj_button button0 = {
        .obj.id = 1001,
        .obj.type = OBJ_BUTTON,
        .obj.start_x = 49,
        .obj.start_y = 166,
        .obj.width = 128,
        .obj.height = 128,
        .obj.bc = C_BLUE,
        .obj.fc = C_GRAY,
        .obj.oc = C_GRAY,
        .obj.owidth = 4,
        .obj.font = icon96,
        .obj.text = "\ue922",
        .obj.visible = 1,
        .obj.cb = button0_click,
        .r = 15,
    };
    static obj_button button1 = {
        .obj.id = 1002,
        .obj.type = OBJ_BUTTON,
        .obj.start_x = 236,
        .obj.start_y = 190,
        .obj.width = 94,
        .obj.height = 84,
        .obj.bc = C_RED,
        .obj.fc = C_WHITE,
        .obj.oc = C_GRAY,
        .obj.owidth = 0,
        .obj.font = fontawesome52,
        .obj.text = "\uf2dc",
        .obj.visible = 1,
        .obj.cb = button1_click,
        .r = 0,
    };
    static obj_label label0 = {
        .obj.id = 1003,
        .obj.type = OBJ_LABEL,
        .obj.start_x = 24,
        .obj.start_y = 64,
        .obj.width = 203,
        .obj.height = 38,
        .obj.bc = C_BLACK,
        .obj.fc = C_MEDIUMSLATEBLUE,
        .obj.oc = C_BLACK,
        .obj.owidth = 0,
        .obj.font = zh24,
        .obj.text = "Hello SewScript",
        .obj.visible = 1,
        .obj.cb = label0_click,
        .trans = 0,
    };
    static obj_number number0 = {
        .obj.id = 1004,
        .obj.type = OBJ_NUMBER,
        .obj.start_x = 295,
        .obj.start_y = 47,
        .obj.width = 160,
        .obj.height = 60,
        .obj.bc = C_LIGHTGRAY,
        .obj.fc = C_RED,
        .obj.oc = C_BLACK,
        .obj.owidth = 0,
        .obj.font = yahei52,
        .obj.text = "2500",
        .obj.visible = 1,
        .obj.cb = number0_click,
        .value = 0,
    };
    static obj_spinbox spinbox0 = {
        .obj.id = 1005,
        .obj.type = OBJ_SPINBOX,
        .obj.start_x = 505,
        .obj.start_y = 44,
        .obj.width = 198,
        .obj.height = 60,
        .obj.bc = C_BLACK,
        .obj.fc = C_GRAY,
        .obj.oc = C_WHITE,
        .obj.owidth = 1,
        .obj.font = yahei52,
        .obj.text = "1234",
        .obj.visible = 1,
        .obj.cb = spinbox0_click,
        .value = 0,
    };
    static obj_qrcode qrcode0 = {
        .obj.id = 1006,
        .obj.type = OBJ_QRCODE,
        .obj.start_x = 590,
        .obj.start_y = 168,
        .obj.width = 128,
        .obj.height = 128,
        .obj.bc = C_BLACK,
        .obj.fc = C_WHITE,
        .obj.oc = C_BLACK,
        .obj.owidth = 0,
        .obj.font = asc18,
        .obj.text = "Hello world!",
        .obj.visible = 1,
    };
    static obj_led led0 = {
        .obj.id = 1007,
        .obj.type = OBJ_LED,
        .obj.start_x = 390,
        .obj.start_y = 174,
        .obj.width = 30,
        .obj.height = 30,
        .obj.bc = C_BLACK,
        .obj.fc = C_LIMEGREEN,
        .obj.oc = C_RED,
        .obj.owidth = 1,
        .obj.font = asc18,
        .obj.text = "",
        .obj.visible = 1,
        .status = 0,
    };
    static obj_progressbar progressbar0 = {
        .obj.id = 1008,
        .obj.type = OBJ_PROGRESSBAR,
        .obj.start_x = 81,
        .obj.start_y = 375,
        .obj.width = 228,
        .obj.height = 35,
        .obj.bc = C_BLACK,
        .obj.fc = C_FORESTGREEN,
        .obj.oc = C_WHITE,
        .obj.owidth = 0,
        .obj.font = asc18,
        .obj.text = "",
        .obj.visible = 1,
        .value = 0,
    };
    static obj_slider slider0 = {
        .obj.id = 1009,
        .obj.type = OBJ_SLIDER,
        .obj.start_x = 467,
        .obj.start_y = 373,
        .obj.width = 210,
        .obj.height = 39,
        .obj.bc = C_BLACK,
        .obj.fc = C_DEEPSKYBLUE,
        .obj.oc = C_WHITE,
        .obj.owidth = 0,
        .obj.font = asc18,
        .obj.text = "",
        .obj.visible = 1,
        .thumbwidth = 10,
    };
    static obj_switch switch0 = {
        .obj.id = 1010,
        .obj.type = OBJ_SWITCH,
        .obj.start_x = 390,
        .obj.start_y = 239,
        .obj.width = 107,
        .obj.height = 55,
        .obj.bc = C_BLACK,
        .obj.fc = C_GOLDENROD,
        .obj.oc = C_WHITE,
        .obj.owidth = 0,
        .obj.font = asc18,
        .obj.text = "",
        .obj.visible = 1,
        .obj.cb = sw0_click,
        .status = 0,
    };
    static int timer0;/*
    static void button0_click()
    {	
    }
    static void button1_click()
    {	
    }
    static void label0_click()
    {	
    }
    static void number0_click()
    {	
    }
    static void spinbox0_click()
    {	
    }
    static void sw0_click()
    {	
    }
    static void timer_cb()
    {	
    }
    */
    static void Createmywnd()
    {
        CreateWindow(&mywnd);
        CreateButton(&mywnd,&button0);
        CreateButton(&mywnd,&button1);
        CreateLabel(&mywnd,&label0);
        CreateNumber(&mywnd,&number0);
        CreateSpinbox(&mywnd,&spinbox0);
        CreateQRcode(&mywnd,&qrcode0);
        CreateLed(&mywnd,&led0);
        CreateProgressbar(&mywnd,&progressbar0);
        CreateSlider(&mywnd,&slider0);
        CreateSwitch(&mywnd,&switch0);
    }
    #endif
    /*widgetinfo end*/

以上自动生成的代码一方面对窗口以及窗口里的各Widget进行了初始化，并将Widget加入到Window的列表中。

在"gui.c"中加入如下代码，窗口创建函数以及点击事件的空白函数可从自动生成的注释行里拷贝。

.. code-block:: 

    static void button0_click()
    {
    }
    static void button1_click()
    {	
    }

    static void number0_click()
    {	
    }
    static void spinbox0_click()
    {	
    }
    static void label0_click()
    {	
    }
    static void sw0_click()
    {
    }
    static void timer_cb()
    {	
    }
    void main()
    {
        GUI_Init(800,480);
        spinbox0.scrollbar_size = 30;
        Createmywnd();
        SetSpinboxRange(&spinbox0,10000,0);
        SetSpinboxValue(&spinbox0,1234);
        SetProgressbarValue(&progressbar0,40);
        SetNumberValue(&number0,2500);
        SetLedStatus(&led0,1);
        while(1)
        {
            eventHandler();
        }
    }

代码初始化了一个800*480的屏幕，并创建了窗口(加入窗口列表)，并在死循环里调用了eventHandler来处理事件。

编译后运行，设计的界面就会弹出来。此时点击事件均为空白函数，因此屏幕点击是没有反应的。

可在界面设计器里直接点击按钮，IDE会跳转到相应的点击事件函数，如下加入按钮点击的处理代码。

.. code-block:: 

    static void button0_click()
    {
        printf("T-shirt\n");	
    }
    static void button1_click()
    {	
        printf("Snow\n");
    }
    static void sw0_click()
    {
        int a;
        a = GetSwitchStatus(&switch0);
        SetLedStatus(&led0,	a);
    }

再次编译运行，点击按钮，这次将会在信息输出区看到相应的输出。

快乐小鸡
~~~~~~~~~~~~~~~

小猪佩奇最喜欢玩的游戏。在屏幕上点一下，出现一只小鸡，延迟一会儿下了一个蛋。

首先屏幕上需要一个按钮以及一个定时器，用于清除画面和延迟下蛋。

.. code-block::

    static void my_wnd1_click(int* ptr);

    /*widgetinfo start*/
    static void button0_click();
    static void timer1_update();
    static wnd mywnd= {
        .mywnd.id = 1000,
        .mywnd.type = OBJ_WINDOW,
        .mywnd.start_x = 0,
        .mywnd.start_y = 0,
        .mywnd.width = 800,
        .mywnd.height = 480,
        .mywnd.bc = C_BLACK,
        .mywnd.fc = C_WHITE,
        .mywnd.oc = C_BLACK,
        .mywnd.owidth = 0,
        .mywnd.font = asc35,
        .mywnd.text = "",
        .mywnd.visible = 0,
        .click_cb = my_wnd1_click
    };
    static obj_button button0 = {
        .obj.id = 1001,
        .obj.type = OBJ_BUTTON,
        .obj.start_x = 119,
        .obj.start_y = 398,
        .obj.width = 93,
        .obj.height = 60,
        .obj.bc = C_BLUE,
        .obj.fc = C_LAWNGREEN,
        .obj.oc = C_MEDIUMSLATEBLUE,
        .obj.owidth = 4,
        .obj.font = zh31,
        .obj.text = "清除",
        .obj.visible = 1,
        .obj.cb = button0_click,
        .r = 15,
    };
    static int timer1;
    /*
        static void button0_click()
    {	
    }
    static void timer1_update()
    {	
    }
    */
    static void Createmywnd()
    {
        CreateWindow(&mywnd);
        CreateButton(&mywnd,&button0);
    }
    /*widgetinfo end*/

接下来需要一张小鸡和蛋的图片，这个可以用工具软件将图片转化为数组。不推荐使用大的图片数组，大的图片可存到内置文件系统里。

.. code-block::

    char _acchicken[1535] =
    {
        0x42, 0x4D, 0xFE, 0x05, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x76, 0x00, 0x00, 0x00, 0x28, 0x00, 0x00, 0x00, 0x30, 0x00, 0x00, 0x00, 0x3B, 0x00, 0x00, 0x00, 0x01, 0x00, 0x04, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
        0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x10, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0x02, 0x00, 0x00, 0x27, 0x61, 0x00, 0x00, 0x65, 0x68, 0x00, 0x6F, 0x6F, 0x70, 0x00, 0x00, 0x0F, 0x9D, 0x00, 0x00, 0x51, 0xA0, 0x00, 0x00, 0x00,
        0xF7, 0x00, 0x00, 0x6C, 0xEF, 0x00, 0x01, 0xA8, 0xA8, 0x00, 0x5A, 0xA1, 0xA2, 0x00, 0x00, 0xBF, 0xC0, 0x00, 0x00, 0xF7, 0xF9, 0x00, 0x97, 0xA6, 0xA6, 0x00, 0xB9, 0xC1, 0xC1, 0x00, 0xF8, 0xF8, 0xF8, 0x00, 0xFE, 0xFE, 0xFE, 0x00, 0x00, 0x00,
        0x00, 0x00, 0x01, 0x50, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x10, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x10, 0x00, 0x05, 0x71, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0x71, 0x00, 0x00, 0x10,
        0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0x77, 0x51, 0x00, 0x75, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x05, 0x70, 0x00, 0x57, 0x70, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x05, 0x77, 0x71, 0x77, 0x00, 0x00, 0x00, 0x00,
        0x00, 0x00, 0x00, 0x07, 0x71, 0x57, 0x75, 0x10, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0x77, 0x77, 0x10, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x57, 0x77, 0x51, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
        0x01, 0x57, 0x77, 0x77, 0x77, 0x50, 0x00, 0x00, 0x00, 0x00, 0x17, 0x77, 0x77, 0x75, 0x51, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x05, 0x75, 0x11, 0x17, 0x55, 0x77, 0x50, 0x00, 0x01, 0x57, 0x75, 0x77, 0x11, 0x55, 0x75, 0x00,
        0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x07, 0x10, 0x01, 0x22, 0x22, 0x22, 0x21, 0x00, 0x57, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x05, 0x12, 0x88, 0x88, 0x88,
        0x88, 0x88, 0x82, 0x15, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x18, 0x88, 0x88, 0x88, 0x88, 0x88, 0x88, 0x88, 0x82, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
        0x00, 0x00, 0x08, 0x88, 0x88, 0x88, 0x88, 0x88, 0x88, 0x88, 0x88, 0x88, 0x82, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0x88, 0x88, 0x88, 0x88, 0x88, 0x88, 0x88, 0x88, 0x88, 0x88, 0x88, 0x80, 0x00, 0x00,
        0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x28, 0x88, 0x88, 0x88, 0x88, 0xAA, 0xAA, 0x88, 0x88, 0x88, 0x88, 0x88, 0x88, 0x10, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0x88, 0x88, 0x88, 0xAB, 0xBB, 0xBB, 0xBB,
        0xBB, 0xBA, 0xA8, 0x88, 0x88, 0x88, 0x81, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x18, 0x88, 0x8A, 0xBB, 0xBB, 0xBB, 0xBB, 0xBB, 0xBB, 0xBB, 0xBB, 0xA8, 0x88, 0x88, 0x88, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
        0x88, 0x88, 0xAB, 0xBB, 0xBB, 0xBB, 0xBB, 0xBB, 0xBB, 0xBB, 0xBB, 0xBB, 0xA8, 0x88, 0x88, 0x80, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x08, 0x88, 0xAB, 0xBB, 0xBB, 0xBB, 0xBB, 0xBB, 0xBB, 0xBB, 0xBB, 0xBB, 0xBB, 0xBA, 0x88, 0x88, 0x82,
        0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x18, 0x8A, 0xBB, 0xBB, 0xBB, 0xBB, 0xBB, 0xBB, 0xBB, 0xBB, 0xBB, 0xBB, 0xBB, 0xBB, 0xBA, 0x88, 0x88, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x88, 0xAB, 0xBB, 0xBB, 0xBB, 0xBB, 0xBB, 0xBB, 0xBB,
        0xBB, 0xBB, 0xBB, 0xBB, 0xBB, 0xBB, 0xA8, 0x88, 0x20, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0x8A, 0xBB, 0xBB, 0xBB, 0xBB, 0xBB, 0xBB, 0xBB, 0xBB, 0xBB, 0xBB, 0xBB, 0xBB, 0xBB, 0xBB, 0xB8, 0x88, 0x80, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xAB,
        0xBB, 0xBB, 0xBB, 0xBB, 0xBB, 0xBB, 0xBB, 0xBB, 0xBB, 0xBB, 0xBB, 0xBB, 0xBB, 0xBB, 0xBB, 0x88, 0x81, 0x00, 0x00, 0x00, 0x00, 0x00, 0x08, 0xBB, 0xBB, 0xBB, 0xBB, 0xBB, 0xBB, 0xBB, 0xBB, 0xBB, 0xBB, 0xBB, 0xBB, 0xBB, 0xBB, 0xBB, 0xBB, 0xA8,
        0x82, 0x00, 0x00, 0x00, 0x00, 0x00, 0x0A, 0xBB, 0xBB, 0xBB, 0xBB, 0xBB, 0xBB, 0xBB, 0xBB, 0xBB, 0xBB, 0xBB, 0xBB, 0xBB, 0xBB, 0xBB, 0xBB, 0xB8, 0x88, 0x00, 0x00, 0x00, 0x00, 0x00, 0x1B, 0xBB, 0xBB, 0xBB, 0xBB, 0xBB, 0xBB, 0xBB, 0xBB, 0xBB,
        0xBB, 0xBB, 0xBB, 0xBB, 0xBB, 0xBB, 0xBB, 0xBA, 0x88, 0x00, 0x00, 0x00, 0x00, 0x00, 0x2B, 0xBB, 0xBB, 0xBB, 0xBB, 0xBB, 0xBB, 0xBA, 0x88, 0x18, 0x88, 0xAA, 0xBB, 0xBB, 0xBB, 0xBB, 0xBB, 0xBB, 0x88, 0x00, 0x00, 0x00, 0x00, 0x00, 0x2B, 0xBB,
        0xBB, 0xBB, 0xBB, 0xBB, 0xBA, 0x22, 0x21, 0x61, 0x82, 0x22, 0x8A, 0xBB, 0xBB, 0xBB, 0xBB, 0xBB, 0xA8, 0x00, 0x00, 0x00, 0x00, 0x00, 0x2B, 0xBB, 0xBB, 0xBB, 0xBB, 0xBB, 0x22, 0x88, 0x8A, 0x44, 0x8A, 0x88, 0x22, 0x8A, 0xBB, 0xBB, 0xBB, 0xBB,
        0xB8, 0x22, 0x00, 0x00, 0x00, 0x00, 0x2B, 0xBB, 0xBB, 0xBB, 0xBB, 0xA2, 0x88, 0xAA, 0x8B, 0xA4, 0x5B, 0xBA, 0x88, 0x28, 0xAB, 0xBB, 0xBB, 0xBB, 0xB8, 0x2B, 0xA1, 0x00, 0x00, 0x00, 0x2B, 0xBB, 0xBB, 0xBB, 0xBA, 0x28, 0xAB, 0xB8, 0xBB, 0xB8,
        0x4A, 0xBB, 0xBA, 0x82, 0x2A, 0xBB, 0xBB, 0xBB, 0xBA, 0x2B, 0xBB, 0x20, 0x00, 0x00, 0x1B, 0xBB, 0xBB, 0xBB, 0xA2, 0xAB, 0xBB, 0xB8, 0xBB, 0xBB, 0x82, 0xBB, 0xBB, 0xA8, 0x28, 0xBB, 0xBB, 0xBB, 0xB8, 0x8B, 0xBB, 0xB2, 0x00, 0x00, 0x0B, 0xBB,
        0xBB, 0xBB, 0x2A, 0xBB, 0xBB, 0xB8, 0xBB, 0xBB, 0xB2, 0xAB, 0xBB, 0xBA, 0x82, 0xAB, 0xBB, 0xBB, 0xB8, 0xAB, 0xBB, 0xBB, 0x80, 0x00, 0x08, 0xBB, 0xBB, 0xB8, 0xAB, 0xBB, 0xBB, 0xB8, 0xBB, 0xBB, 0xBB, 0x8B, 0xBB, 0xBB, 0xA8, 0x2B, 0xBB, 0xBB,
        0xB2, 0x2B, 0xBB, 0xBB, 0xB8, 0x00, 0x02, 0xBB, 0xBB, 0xB8, 0xBB, 0xBB, 0xBB, 0x8B, 0xBB, 0xBB, 0xBA, 0xAB, 0xBB, 0xBB, 0xB8, 0x2A, 0xBB, 0xBB, 0xB2, 0xA8, 0xBB, 0xBB, 0xBB, 0x80, 0x00, 0xBB, 0xBB, 0x8B, 0xBB, 0xBB, 0xBB, 0x8B, 0xBB, 0xBB,
        0xA8, 0xBB, 0xBB, 0xBB, 0xBB, 0x82, 0xBB, 0xBB, 0x8A, 0xB8, 0x8B, 0xBB, 0xBB, 0xB2, 0x00, 0x2B, 0xBB, 0x8B, 0xBB, 0xBB, 0xBB, 0xB8, 0x88, 0x88, 0xAB, 0xBB, 0xBB, 0xBB, 0xBB, 0xA2, 0xBB, 0xBB, 0x1B, 0xBB, 0x88, 0xBB, 0xBB, 0xB2, 0x00, 0x0A,
        0xBB, 0x8B, 0xBB, 0xBB, 0xBB, 0xBB, 0xBB, 0xBB, 0xBB, 0xBB, 0xBB, 0xBB, 0xBB, 0xA2, 0xBB, 0xB8, 0xA2, 0xBB, 0xB8, 0x8B, 0xBB, 0x20, 0x00, 0x01, 0xBB, 0xAB, 0xBB, 0xBB, 0x9C, 0xC9, 0xBB, 0xBB, 0xBB, 0x8C, 0xC9, 0xAB, 0xBB, 0xB2, 0xBB, 0xB2,
        0xB8, 0xAB, 0xBB, 0x82, 0x81, 0x00, 0x00, 0x00, 0x2B, 0xAB, 0xBB, 0xBC, 0xFF, 0xFF, 0xCA, 0xBB, 0xB9, 0xEF, 0xFF, 0xDA, 0xBB, 0xB8, 0xAB, 0x2B, 0xBB, 0x2B, 0xBB, 0xB8, 0x00, 0x00, 0x00, 0x00, 0x02, 0xAB, 0xBB, 0x8F, 0xFE, 0x11, 0xE9, 0xBB,
        0x8E, 0x30, 0xCF, 0xF9, 0xBB, 0xB8, 0xA2, 0x1B, 0xBB, 0xB2, 0xAA, 0x20, 0x00, 0x00, 0x00, 0x00, 0x00, 0x8B, 0xBB, 0x9F, 0xFD, 0x00, 0xDC, 0xBB, 0x9F, 0x10, 0x3F, 0xFD, 0xBB, 0xB8, 0x20, 0x08, 0xBB, 0xBB, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
        0x00, 0x2B, 0xBB, 0x9F, 0xFF, 0xCC, 0xFC, 0xBB, 0x9F, 0xDC, 0xEF, 0xFD, 0xBB, 0xB2, 0x00, 0x00, 0x22, 0x20, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x1B, 0xBB, 0x8E, 0xFF, 0xFF, 0xF9, 0xBB, 0xAE, 0xFF, 0xFF, 0xF9, 0xBB, 0xB1, 0x00, 0x00,
        0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x0A, 0xBB, 0xB9, 0xEF, 0xFE, 0x9B, 0xBB, 0xB9, 0xEF, 0xFF, 0xCA, 0xBB, 0xA0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xBB, 0xBB, 0x89, 0x98, 0xBB, 0xBB,
        0xBB, 0xA9, 0x98, 0xBB, 0xBB, 0x20, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xAB, 0xBB, 0xBB, 0xBB, 0xBB, 0x8B, 0xBB, 0xBB, 0xBB, 0xBB, 0xBA, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
        0x00, 0x00, 0x0B, 0xBB, 0xBB, 0xBB, 0xBB, 0x1A, 0xBB, 0xBB, 0xBB, 0xBB, 0xB0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0xBB, 0xBB, 0xBB, 0xB8, 0x6A, 0xBB, 0xBB, 0xBB, 0xBB, 0x10, 0x00, 0x00, 0x00,
        0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x1B, 0xBB, 0xBB, 0xB5, 0x68, 0xBB, 0xBB, 0xBB, 0xB1, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x8B, 0xBB, 0xA6, 0x65,
        0xBB, 0xBB, 0xB8, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x8A, 0x56, 0x64, 0xBB, 0xB8, 0x46, 0x64, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
        0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x46, 0x66, 0x54, 0x44, 0x66, 0x66, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x66, 0x66, 0x46, 0x64, 0x46, 0x66, 0x00, 0x00, 0x00, 0x00,
        0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x04, 0x66, 0x66, 0x64, 0x66, 0x64, 0x61, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x06, 0x66, 0x66,
        0x64, 0x66, 0x64, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x46, 0x66, 0x66, 0x64, 0x66, 0x64, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
        0x00, 0x00, 0x00, 0x00, 0x00, 0x46, 0x66, 0x66, 0x64, 0x66, 0x60, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x46, 0x66, 0x66, 0x64, 0x64, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
        0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x06, 0x66, 0x66, 0x10, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x44, 0x40,
        0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00
    };

    char _acegg[807] =
    {
        0x42, 0x4D, 0x26, 0x03, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x76, 0x00, 0x00, 0x00, 0x28, 0x00, 0x00, 0x00, 0x20, 0x00, 0x00, 0x00, 0x2B, 0x00, 0x00, 0x00, 0x01, 0x00, 0x04, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
        0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x10, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0x00, 0x0E, 0x1D, 0x24, 0x00, 0x13, 0x28, 0x31, 0x00, 0x1A, 0x38, 0x46, 0x00, 0x22, 0x49, 0x5B, 0x00, 0x27, 0x54, 0x68, 0x00, 0x2E, 0x61,
        0x79, 0x00, 0x34, 0x6E, 0x89, 0x00, 0x3D, 0x83, 0xA3, 0x00, 0x46, 0x94, 0xB8, 0x00, 0x60, 0xA1, 0xBE, 0x00, 0x50, 0xB0, 0xDB, 0x00, 0x5C, 0xC3, 0xF2, 0x00, 0x87, 0xB9, 0xD0, 0x00, 0xAA, 0xDC, 0xF4, 0x00, 0x00, 0x00, 0x00, 0x00, 0xFF, 0xFF,
        0xFF, 0xFF, 0xFF, 0xF1, 0x35, 0x67, 0x77, 0x63, 0x0F, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0x16, 0xBB, 0xBB, 0xBB, 0xBB, 0xBB, 0xB9, 0x40, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0x18, 0xCC, 0xCB, 0xBB, 0xBB, 0xBB, 0xBB,
        0xBB, 0xBB, 0x4F, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xF3, 0xBC, 0xCC, 0xCC, 0xCC, 0xCC, 0xCC, 0xBB, 0xBB, 0xBB, 0xB8, 0x0F, 0xFF, 0xFF, 0xFF, 0xFF, 0x4C, 0xCC, 0xCC, 0xCC, 0xCC, 0xCC, 0xCC, 0xCC, 0xBB, 0xBB, 0xBB, 0x90, 0xFF, 0xFF, 0xFF, 0xF3,
        0xCC, 0xCC, 0xCC, 0xCC, 0xCC, 0xCC, 0xCC, 0xCC, 0xCC, 0xBB, 0xBB, 0xB9, 0x0F, 0xFF, 0xFF, 0x0B, 0xCC, 0xCC, 0xCC, 0xCC, 0xCC, 0xCC, 0xCC, 0xCC, 0xCC, 0xCB, 0xBB, 0xBB, 0x7F, 0xFF, 0xFF, 0x7C, 0xCC, 0xCC, 0xCC, 0xCC, 0xCC, 0xCC, 0xCC, 0xCC,
        0xCC, 0xCC, 0xBB, 0xBB, 0xB3, 0xFF, 0xF0, 0xCC, 0xCC, 0xCC, 0xCC, 0xCC, 0xCC, 0xCC, 0xCC, 0xCC, 0xCC, 0xCC, 0xCB, 0xBB, 0xB9, 0xFF, 0xF5, 0xCC, 0xCC, 0xCC, 0xCC, 0xCC, 0xCC, 0xCC, 0xCC, 0xCC, 0xCC, 0xCC, 0xCC, 0xBB, 0xBB, 0x3F, 0xF9, 0xCC,
        0xCC, 0xCC, 0xCC, 0xCC, 0xCC, 0xCC, 0xCC, 0xCC, 0xCC, 0xCC, 0xCC, 0xBB, 0xBB, 0x8F, 0x0C, 0xCC, 0xCC, 0xCC, 0xCC, 0xCC, 0xCC, 0xCC, 0xCC, 0xCC, 0xCC, 0xCC, 0xCC, 0xCB, 0xBB, 0xBF, 0x2C, 0xCC, 0xCC, 0xCC, 0xCC, 0xCC, 0xCC, 0xCC, 0xCC, 0xCC,
        0xCC, 0xCC, 0xCC, 0xCB, 0xBB, 0xB2, 0x4C, 0xCC, 0xCC, 0xCC, 0xCC, 0xCC, 0xCC, 0xCC, 0xCC, 0xCC, 0xCC, 0xCC, 0xCC, 0xCB, 0xBB, 0xB4, 0x6C, 0xCC, 0xCC, 0xCC, 0xCC, 0xCC, 0xCC, 0xCC, 0xCC, 0xCC, 0xCC, 0xCC, 0xCC, 0xCC, 0xBB, 0xB6, 0x7C, 0xCC,
        0xCC, 0xCC, 0xCC, 0xCC, 0xCC, 0xCC, 0xCC, 0xCC, 0xCC, 0xCC, 0xCC, 0xCC, 0xBB, 0xB7, 0x7C, 0xCC, 0xCC, 0xCC, 0xCC, 0xCC, 0xCC, 0xCC, 0xCC, 0xCC, 0xCC, 0xCC, 0xCC, 0xCC, 0xBB, 0xB7, 0x7C, 0xCC, 0xCC, 0xCC, 0xCC, 0xCC, 0xCC, 0xCC, 0xCC, 0xCC,
        0xCC, 0xCC, 0xCC, 0xCC, 0xBB, 0xB7, 0x7C, 0xCC, 0xCC, 0xCC, 0xCC, 0xCC, 0xCC, 0xCC, 0xCC, 0xCC, 0xCC, 0xCC, 0xCC, 0xCC, 0xBB, 0xB6, 0x6C, 0xCC, 0xCC, 0xCC, 0xCC, 0xCC, 0xCC, 0xCC, 0xCC, 0xCC, 0xCC, 0xCC, 0xCC, 0xCC, 0xBB, 0xB5, 0x4C, 0xCC,
        0xCC, 0xCC, 0xCC, 0xCC, 0xCC, 0xCC, 0xCC, 0xCC, 0xCC, 0xCC, 0xCC, 0xCC, 0xBB, 0xB3, 0x3C, 0xCC, 0xCC, 0xCC, 0xCC, 0xCC, 0xCC, 0xCC, 0xCC, 0xCC, 0xCC, 0xCC, 0xCC, 0xCC, 0xBB, 0xB1, 0x0C, 0xCC, 0xCC, 0xCC, 0xCC, 0xCC, 0xCC, 0xCC, 0xCC, 0xCC,
        0xCC, 0xCC, 0xCC, 0xCC, 0xBB, 0xB0, 0xFB, 0xCC, 0xCC, 0xCC, 0xCC, 0xCC, 0xCC, 0xCC, 0xCC, 0xCC, 0xCC, 0xCC, 0xCC, 0xCC, 0xBB, 0x9F, 0xF8, 0xCC, 0xCC, 0xCC, 0xCC, 0xCC, 0xCC, 0xCC, 0xCC, 0xCC, 0xCC, 0xCC, 0xCC, 0xCC, 0xBB, 0x7F, 0xF4, 0xCC,
        0xCC, 0xCC, 0xCC, 0xCC, 0xCC, 0xCC, 0xCC, 0xCC, 0xCC, 0xCC, 0xCC, 0xCC, 0xBB, 0x3F, 0xF1, 0xCC, 0xCC, 0xCC, 0xCC, 0xCC, 0xCC, 0xCC, 0xCC, 0xCC, 0xCC, 0xCC, 0xCC, 0xCC, 0xBB, 0x0F, 0xFF, 0x9C, 0xCC, 0xCC, 0xCC, 0xCC, 0xCC, 0xCC, 0xCC, 0xCC,
        0xCC, 0xCC, 0xCC, 0xCB, 0xB8, 0xFF, 0xFF, 0x5C, 0xCC, 0xCC, 0xCC, 0xCC, 0xCC, 0xCC, 0xCC, 0xCC, 0xCC, 0xCC, 0xCC, 0xCB, 0xB4, 0xFF, 0xFF, 0x0C, 0xCC, 0xCC, 0xCC, 0xCC, 0xCC, 0xCC, 0xCC, 0xCC, 0xCC, 0xCC, 0xCC, 0xCB, 0xB0, 0xFF, 0xFF, 0xF7,
        0xCC, 0xCC, 0xCB, 0xDA, 0xCC, 0xCC, 0xCC, 0xCC, 0xCC, 0xCC, 0xCC, 0xCB, 0x7F, 0xFF, 0xFF, 0xF2, 0xCC, 0xCC, 0xCD, 0xEE, 0xAC, 0xCC, 0xCC, 0xCC, 0xCC, 0xCC, 0xCC, 0xBB, 0x1F, 0xFF, 0xFF, 0xFF, 0x8C, 0xCC, 0xBE, 0xEE, 0xDC, 0xCC, 0xCC, 0xCC,
        0xCC, 0xCC, 0xCC, 0xB7, 0xFF, 0xFF, 0xFF, 0xFF, 0x1C, 0xCC, 0xCD, 0xEE, 0xEB, 0xCC, 0xCC, 0xCC, 0xCC, 0xCC, 0xCC, 0xC1, 0xFF, 0xFF, 0xFF, 0xFF, 0xF7, 0xCC, 0xCA, 0xEE, 0xEB, 0xCC, 0xCC, 0xCC, 0xCC, 0xCC, 0xCC, 0x6F, 0xFF, 0xFF, 0xFF, 0xFF,
        0xF0, 0xBC, 0xCB, 0xDE, 0xEB, 0xCC, 0xCC, 0xCC, 0xCC, 0xCC, 0xCB, 0x0F, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0x2C, 0xCC, 0xBA, 0xAC, 0xCC, 0xCC, 0xCC, 0xCC, 0xCC, 0xC1, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xF5, 0xCC, 0xCC, 0xCC, 0xCC, 0xCC, 0xCC,
        0xCC, 0xCC, 0x4F, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0x7C, 0xCC, 0xCC, 0xCC, 0xCC, 0xCC, 0xCC, 0xC6, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xF7, 0xCC, 0xCC, 0xCC, 0xCC, 0xCC, 0xCC, 0x6F, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF,
        0xFF, 0xFF, 0xFF, 0x5C, 0xCC, 0xCC, 0xCC, 0xCC, 0xB4, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xF2, 0x9C, 0xCC, 0xCC, 0xC7, 0x1F, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xF1, 0x57, 0x74, 0x0F,
        0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0x00
    };

下面是点击事件的处理代码。

.. code-block::

    short ptx;
    short pty;
    short lock_flag = 0;

    static void button0_click()
    {
        SetColor(C_BLACK);
        FillFrame(0,0,LCD_WIDTH,LCD_HEIGHT-100);
        printf("Clear!\n");
    }
    static void timer1_update()
    {
        SetColor(C_BLACK);
        FillFrame(ptx-20,pty-20,48,59);
        DrawBMP(_acegg,ptx-12,pty-12);
        lock_flag = 0;
    }

    static void my_wnd1_click(int* ptr)
    {
        if(lock_flag == 0)
        {
            ptx = *(ptr + 1);
            pty = *(ptr + 2);
            if(pty < 400 && ptx < 800)
            {
                DrawBMP(_acchicken,ptx-20,pty-20);
                lock_flag = 1;
                timer1 = CreateTimer(300,1,timer1_update);
                StartTimer(timer1);
            }
        }
    }

    void main()
    {
        GUI_Init(LCD_WIDTH,LCD_HEIGHT);
        Createmywnd();
        SetBeep(1);
        while(1)
        {
            eventHandler();
        }
    }

以上代码创建了一个窗口，窗口包含一个点击事件my_wnd1_click，窗口还包含一个清除按钮。
屏幕点击发生后，获得点击坐标后，在坐标点附近画出小鸡，并启动一个定时器，300ms后清除小鸡，画出鸡蛋。

.. image::  /.//image//gui-eg4.png
   :align: center
   :width: 800px
   :alt: gui-eg4

| 

下载到实体HMI
~~~~~~~~~~~~~~~

首先确保实体HMI连到和主机相同的网络里，主机接收的客户端连接端口是4573。

在项目选项里选择真机下载运行，编译后点击运行即可。


