通用API列表
============

引用  #include"device.h"

结构体
~~~~~~~~~~~~~~~

.. declaration:: point

.. code-block:: c

    typedef struct POINT
    {
        short x;
        short y;
    }point;

======  ================  ========================================
类型      项目                  描述
======  ================  ========================================
 x      short              
 y      short              
======  ================  ========================================

函数
~~~~~~~~~~~~~~~

.. declaration:: void printf(char* style, ...)

======  ================  ========================================
类型      项目                  描述
======  ================  ========================================
说明      打印变量          一般用于调试，可在工程里禁止调试信息输出
参数      style             %d整数
参数      ...               表示省略检查参数类型及个数
返回值    void              无返回值
======  ================  ========================================

.. declaration:: void sprintf(char* s,char* style,...)

======  ================  =========================================
类型      项目                  描述
======  ================  =========================================
说明      打印到字符串           
参数      s1                目标字符串
参数      style             %d整数
参数      ...               表示省略检查参数类型及个数
返回值    void              无返回值
======  ================  =========================================

.. declaration:: void memset(void* buf,int val, int size)

======  ================  ========================================
类型      项目                  描述
======  ================  ========================================
说明      内存初始化         将一片内存块初始化，低级函数，请慎重使用
参数      buf               内存块指针
参数      val               初始化值
参数      size              内存块大小
返回值    void              无返回值
======  ================  ========================================

.. declaration:: void memcpy(void* dst,void* src,int size)

======  ================  ========================================
类型      项目                  描述
======  ================  ========================================
说明      内存拷贝           将一片内存信息拷贝到另一块内存，低级函数，请慎重使用
参数      dst               目标内存块
参数      src               源内存块
参数      size              内存块大小
返回值    void              无返回值
======  ================  ========================================

.. declaration:: void gpio_out(int chanel,int state)

======  ================  ========================================
类型      项目                  描述
======  ================  ========================================
说明      端口输出            端口输出
参数      chanel             通道编号:0,1,2...
参数      state              0:关闭,1:打开,2:翻转
返回值    void               无返回值
======  ================  ========================================

.. declaration:: int GetInputStatus(int chanel)

======  ================  ========================================
类型      项目                  描述
======  ================  ========================================
说明      读取输入          读取输入
参数      chanel            通道编号:0,1,2...
返回值    int               0:关闭,1:打开
======  ================  ========================================

.. declaration:: int GetOutputStatus(int chanel)

======  ================  ========================================
类型      项目                  描述
======  ================  ========================================
说明      读取输出端口       读取输出端口
参数      chanel            通道编号:0,1,2...
返回值    int               0:关闭,1:打开
======  ================  ========================================

.. declaration:: CreateTimer(int inteval,int mode,void(*cb)())

======  ================  ========================================
类型      项目                  描述
======  ================  ========================================
说明      创建定时器        非阻塞型软定时器
参数      inteval          定时器间隔
参数      mode             0为无限次循环，非0则循环次数由mode决定，有限次循环后自动释放定时器
参数      cb               定时器的处理回调函数
返回值    int              系统分配的软件定时器编号
======  ================  ========================================

.. declaration:: void StartTimer(int id)

======  ================  ========================================
类型      项目                  描述
======  ================  ========================================
说明      启动定时器         启动定时器 
参数      id                定时器编号:0,1,2,3
返回值    void              无返回值
======  ================  ========================================

.. declaration:: void FreeTimer(int id)

======  ================  ========================================
类型      项目                  描述
======  ================  ========================================
说明      释放定时器        一般用于调试，可在工程里禁止调试信息输出
参数      id                定时器编号:0,1,2,3
返回值    void              无返回值
======  ================  ========================================

.. declaration:: void sys_delay(int milsec)

======  ================  ========================================
类型      项目                  描述
======  ================  ========================================
说明      延时              阻塞式延时
参数      milsec            延时时间，ms
返回值    void              无返回值
======  ================  ========================================

.. declaration:: int get_ticks()

======  =================  ========================================
类型      项目                  描述
======  =================  ========================================
说明     获取开机后的ms数    系统滴答时钟计数
返回值    void               无返回值
======  =================  ========================================

.. declaration:: void SetMessageHandler(void(*cb)(),char* buf)

======  ================  ========================================
类型      项目                  描述
======  ================  ========================================
说明      设置串口通信       设置通信的缓冲区及处理函数
参数      cb                收到数据后的处理回调函数
参数      buf               接收缓冲区
返回值    void              无返回值
======  ================  ========================================

.. declaration:: void SendUartMessage(char* p,int len)

======  ================  ========================================
类型      项目                  描述
======  ================  ========================================
说明      发送数据到串口     一般用于调试，可在工程里禁止调试信息输出
参数      p                 数据缓冲区指针
参数      len               数据长度
返回值    void              无返回值
======  ================  ========================================

.. declaration:: void eventHandler()

======  ================  ========================================
类型      项目                  描述
======  ================  ========================================
说明      消息处理          必须放在main函数里的while循环里，用于处理各种消息
返回值    void              无返回值
======  ================  ========================================
